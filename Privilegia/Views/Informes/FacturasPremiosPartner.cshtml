@using Privilegia.Helpers
@model IEnumerable<Privilegia.Models.FacturasPremiosModel>
@{
    ViewBag.Title = "FacturacionPremios";
}
<div class="row">
    <div class="col-md-12">
        <h2 align="center"><span class="glyphicon glyphicon-list"></span> Facturas Premios</h2>
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <label>Listado de Partners:</label>
        <select class="selectpicker" id="selectpickerPartner" data-live-search="true" title="Selecciona un Partner...">
            @{
                if (ViewBag.listPartners != null)
                {
                    var lista = ViewBag.listPartners;

                    foreach (var partner in lista)
                    {
                        <option value="@partner.Id">@partner.Nombre</option>
                    }
                }
            }
        </select>
    </div>
</div>

<div class="panel panel-default">
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="Premios" class="table table-striped" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nombre Empresa</th>
                            <th>Fecha Creacion</th>
                            <th>Estado</th>
                            <th>Total €</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/scripts/AppJs/Privilegia.js")
    <script>
        var otable;

        $(function() {
            otable = $('#Premios')
                .dataTable({
                    "bAutoWidth": false,
                    "aoColumns": [
                        { "sName": "Id", "bVisible": false, "bSearchable": false },
                        { "sName": "Partner.Nombre" },
                        { "sName": "FechaDeCreacion" },
                        { "sName": "Estado" },
                        {
                            "sName": "Total",
                            "render": function (data) {
                                return data + " €";
                            }
                        },
                        {
                            "bSearchable": false,
                            "render": function(data, type, row) {
                                //return '<a href=\"LinkedAccountsDetails/' + data + '\">Edit</a>';
                                var UrlFactura = '@Url.Action("VerFacturaPremios", "Informes")/' + row[0];
                                var UrlEditar = '@Url.Action("EditarFacturaPremios", "Informes")/' + row[0];
                                return '<a href=\"' +
                                    UrlFactura +
                                    '\" class=\"btn btn-success btn-sm\" target=\"_blank\"><span class="glyphicon glyphicon-file" aria-hidden="true"></span></a> ' +
                                     '<a href=\"' +
                                    UrlEditar +
                                    '\" class=\"btn btn-info btn-sm\" ><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a> ';
                            }
                        }
                    ],
                    "oLanguage": {
                        "sProcessing": "Procesando...",
                        "sLengthMenu": "Mostrar _MENU_ registros",
                        "sZeroRecords": "No se encontraron productos.",
                        "sEmptyTable": "Ningún producto disponible.",
                        "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                        "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sSearch": "Buscar:",
                        "sUrl": "",
                        "sInfoThousands": ",",
                        "sLoadingRecords": "Cargando...",
                        "oPaginate": {
                            "sFirst": "Primero",
                            "sLast": "Último",
                            "sNext": "Siguiente",
                            "sPrevious": "Anterior"
                        },
                        "oAria": {
                            "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                            "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                        }
                    }
                }).yadcf([{
                    column_number: 3
                }]);

        });

        function filterme(filtro) {

            var partner = $('#selectpickerPartner').val();

            if (filtro && typeof partner !== "undefined") {
                //Tenemos partner
                $.ajax({
                    type: "GET",
                    url: "/Informes/CargarFacturasPremios",
                    data: { idPartner: partner },
                    success: function(data) {
                        if (data.iTotalDisplayRecords > 0) {
                            //botoncrearfactura
                            otable.fnClearTable();
                            otable.fnAddData(data.aaData);
                            otable.fnDraw();
                        } else {
                            otable.fnClearTable();
                            otable.fnDraw();
                        }


                    }
                });
            } else {
                //No tenemos partner
                $.ajax({
                    type: "GET",
                    url: "/Informes/CargarFacturasPremios",
                    data: { idPartner: null },
                    success: function (data) {
                        if (data.iTotalDisplayRecords > 0) {
                            //botoncrearfactura
                            otable.fnClearTable();
                            otable.fnAddData(data.aaData);
                            otable.fnDraw();
                        } else {
                            otable.fnClearTable();
                            otable.fnDraw();
                        }


                    }
                });

            }

        }

        $(document)
            .ready(function() {
                filterme(false);
                $('#selectpickerPartner')
                    .change(function() {
                        filterme(true);
                    });
            });

    </script>
}
